html:
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="index.js" type="module" defer></script>
    <script src="../../helpers/header.js" type="module" defer></script>
    <link rel="stylesheet" href="style.css" />
  </head>
  <body>
    <div class="container text-center">
      <form id="todoForm">
        <input type="text" id="todoItemInput" autocomplete="off" placeholder="item" />
      </form>

      <div id="listContainer" class="list-container"></div>
      <div class="no-elments">Ooops! List is empty</div>
    </div>

    <template id="todo"
      ><li>
        <span class="text"></span>
        <button class="edit">✏️</button>
        <button class="delete">🗑️</button>
      </li></template
    >
  </body>
</html>
------------------
index.js
const initialItems = ['JavaScript', 'HTML', 'CSS', 'React', 'Angular', 'Zustand', 'NextJS', 'TypeScript'];

const listContainer = document.getElementById('listContainer');
const todoItemInput = document.getElementById('todoItemInput');
const todoForm = document.getElementById('todoForm');
const todo = document.getElementById('todo');

todoForm.addEventListener('submit', e => {
  e.preventDefault();
  const todoItem = todoItemInput.value;
  if (todoItem) {
    addTodoItem(todoItem);
  }
});

function addTodoItem(todoItem) {
  const todoElement = todo.content.cloneNode(true);
  todoElement.querySelector('.text').textContent = todoItem;
  listContainer.appendChild(todoElement);
  todoItemInput.value = '';
}

listContainer.addEventListener('click', e => {
  if (e.target.classList.contains('delete')) {
    e.target.parentElement.remove();
  } else if (e.target.classList.contains('edit')) {
    const edit = e.target;
    const text = e.target.parentElement.querySelector('.text');
    const input = document.createElement('input');
    input.value = text.textContent;
    edit.parentElement.replaceChild(input, text);
    edit.textContent = '💾';
    edit.className = 'save';
  } else if (e.target.classList.contains('save')) {
    const save = e.target;
    const text = e.target.parentElement.querySelector('input');
    const span = document.createElement('span');
    span.className = 'text';
    span.textContent = text.value;
    save.parentElement.replaceChild(span, text);
    save.textContent = '✏️';
    save.className = 'edit';
  }
});

initialItems.forEach(addTodoItem);
------
@import url(../../helpers/core.css);

#todoItemInput {
  margin-bottom: 1rem;
  padding: 0.25rem;
  font-size: 1.25rem;
}

.no-elments {
  display: none;
}

.list-container:empty ~ .no-elments {
  display: block;
  font-size: 2rem;
}

li {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 1rem;
}

button {
  margin-left: 0.5rem;
  color: white;
  font-size: 1rem;
  background: white;
  border: none;
  cursor: pointer;
}

button.edit {
  transform: rotateY(180deg);
}
